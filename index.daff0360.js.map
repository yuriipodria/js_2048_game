{"mappings":"C,A,WKAO,SAAS,EAAiB,CAAG,CAAE,CAAG,CAAE,CAAK,EAK5C,OAJI,KAAO,EACP,OAAO,cAAc,CAAC,EAAK,EAAK,CAAE,MAAO,EAAO,WAAY,CAAA,EAAM,aAAc,CAAA,EAAM,SAAU,CAAA,CAAK,GAClG,CAAG,CAAC,EAAI,CAAG,EAEX,CACX,CMNO,SAAS,EAAqB,CAAG,CAAE,CAAG,EACrC,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CDJO,SAAS,EAA+B,CAAC,CAAE,CAAM,EACpD,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAAG,GAE1D,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EAAG,GAChH,CENO,SAAS,EAAqB,CAAG,EACpC,OAAO,ACJJ,SAA8B,CAAG,EACpC,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AENjC,SAA4B,CAAI,EACnC,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EFE2D,IAAQ,AAAA,EAA+B,IAAQ,AGNnG,WACH,MAAM,AAAI,UAAU,uIACxB,GHKA,CVAe,IAAM,EAAN,eEI4B,EFJtB,SAAA,EAgCjB,CAAK,EACL,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EAtCgB,ACPd,SAA2B,CAAQ,CAAE,CAAW,EACnD,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDKqB,IAAA,CAAA,GAenB,AAAA,EAAA,IAAA,CAAA,QAAQ,GAER,AAAA,EAAA,IAAA,CAAA,SAjBmB,EAiBL,WAAW,EAuBvB,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CACtC,IAAI,CAAC,SAAS,CAAI,AAAA,EAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EACxC,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAC,CAArC,EAA8C,OAAA,AAAA,EAAG,EAAI,KAAK,C,E,CA5CzC,OEIsB,EFJtB,C,CA+CnB,IAAA,qBAAA,MAAA,SAAmB,CAAG,CAAE,CAAQ,CAAE,CAAU,CAAE,CAAS,CAAE,CAAO,GAC1D,CAAA,EAAU,CAAA,GAAK,AAAmB,IAAnB,CAAG,CAAC,EAAU,GAK/B,CAAG,CAAC,EAAQ,GAAK,CAAG,CAAC,EAAU,EAC9B,CAAU,CAAC,EAAS,CAAC,EAAQ,EAC7B,CAAU,CAAC,EAAS,CAAC,EAAU,CAMN,IAAjB,CAAG,CAAC,EAAQ,GACrB,CAAG,CAAC,EAAQ,CAAG,CAAG,CAAC,EAAU,CAC7B,CAAG,CAAC,EAAU,CAAG,EAEb,CAAU,CAAC,EAAS,CAAC,EAAU,EACjC,CAAA,CAAU,CAAC,EAAS,CAAC,EAAQ,CAAG,CAAA,CADlC,IARA,CAAG,CAAC,EAAQ,EAAI,EAChB,IAAI,CAAC,KAAK,EAAI,CAAG,CAAC,EAAQ,CAC1B,CAAG,CAAC,EAAU,CAAG,EACjB,CAAU,CAAC,EAAS,CAAC,EAAQ,CAAG,CAAA,GASpC,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACQ,EAAQ,gBAAgB,IAAI,CAAC,QAAQ,IAErC,EAAa,gBAAgB,EAAK,mBAAmB,EAE3D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAC,CAAA,CAAK,CAA9B,EACE,IAAK,IAAI,EAAc,EAAG,EAAc,EAAG,IACzC,EAAK,kBAAkB,CACrB,EACA,EACA,EACA,EAAc,EACd,EAAc,GAGhB,EAAK,kBAAkB,CACrB,EACA,EACA,EACA,EAAc,EACd,EAAc,GAGhB,EAAK,kBAAkB,CACrB,EACA,EACA,EACA,EACA,EAAc,EAGpB,GAEK,IAAI,CAAC,cAAc,CAAC,KACvB,IAAI,CAAC,WAAW,GAChB,IAAI,CAAC,WAAW,IAGd,IAAI,CAAC,QAAQ,IACf,CAAA,IAAI,CAAC,MAAM,CA9GI,EA8GI,UAAU,AAAV,EAGjB,IAAI,CAAC,SAAS,IAChB,CAAA,IAAI,CAAC,MAAM,CAlHI,EAkHI,WAAW,AAAX,CAEvB,C,E,CAEA,IAAA,YAAA,MAAA,WACE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,SAAC,CAArB,EAA6B,OAAA,EAAI,OAAO,E,GACxC,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,SAAC,CAArB,EAA6B,OAAA,EAAI,OAAO,E,GACxC,IAAI,CAAC,WAAW,EAClB,C,E,CAEA,IAAA,cAAA,MAAA,SAAY,CAAK,CAAE,CAAW,CAAE,CAAU,CAAE,CAAS,CAAE,CAAO,GACxD,CAAA,EAAU,CAAA,GAAK,AAAkC,IAAlC,CAAK,CAAC,EAAU,CAAC,EAAY,GAK9C,CAAK,CAAC,EAAQ,CAAC,EAAY,GAAK,CAAK,CAAC,EAAU,CAAC,EAAY,EAC5D,CAAU,CAAC,EAAU,CAAC,EAAY,EAClC,CAAU,CAAC,EAAQ,CAAC,EAAY,CAMQ,IAAhC,CAAK,CAAC,EAAQ,CAAC,EAAY,GACpC,CAAK,CAAC,EAAQ,CAAC,EAAY,CAAG,CAAK,CAAC,EAAU,CAAC,EAAY,CAC3D,CAAK,CAAC,EAAU,CAAC,EAAY,CAAG,EAE5B,CAAU,CAAC,EAAU,CAAC,EAAY,EACpC,CAAA,CAAU,CAAC,EAAQ,CAAC,EAAY,CAAG,CAAA,CADrC,IARA,CAAK,CAAC,EAAQ,CAAC,EAAY,EAAI,EAC/B,IAAI,CAAC,KAAK,EAAI,CAAK,CAAC,EAAQ,CAAC,EAAY,CACzC,CAAK,CAAC,EAAU,CAAC,EAAY,CAAG,EAChC,CAAU,CAAC,EAAQ,CAAC,EAAY,CAAG,CAAA,GASvC,C,E,CAEA,IAAA,SAAA,MAAA,W,I,E,I,CACQ,EAAQ,gBAAgB,IAAI,CAAC,QAAQ,IAErC,EAAa,gBAAgB,EAAK,mBAAmB,EAE3D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAC,CAAA,CAAG,CAAA,CAAa,CAAzC,EACE,IAAK,IAAI,EAAW,EAAG,EAAW,EAAG,IACnC,EAAK,WAAW,CACd,EACA,EACA,EACA,EAAW,EACX,EAAW,GAGb,EAAK,WAAW,CACd,EACA,EACA,EACA,EAAW,EACX,EAAW,GAGb,EAAK,WAAW,CACd,EACA,EACA,EACA,EACA,EAAW,EAGjB,GAEK,IAAI,CAAC,cAAc,CAAC,KACvB,IAAI,CAAC,WAAW,GAChB,IAAI,CAAC,WAAW,IAGd,IAAI,CAAC,QAAQ,IACf,CAAA,IAAI,CAAC,MAAM,CA5LI,EA4LI,UAAU,AAAV,EAGjB,IAAI,CAAC,SAAS,IAChB,CAAA,IAAI,CAAC,MAAM,CAhMI,EAgMI,WAAW,AAAX,CAEvB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAI,CAAC,QAAQ,GAAG,OAAO,GACvB,IAAI,CAAC,MAAM,GACX,IAAI,CAAC,QAAQ,GAAG,OAAO,GACvB,IAAI,CAAC,WAAW,EAClB,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAYA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAKA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,MAAM,CAAG,EAAK,cAAc,CAEjC,IAAI,CAAC,WAAW,GAChB,IAAI,CAAC,WAAW,GAEhB,IAAI,CAAC,WAAW,EAClB,C,E,CAKA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,CACX,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CAED,IAAI,CAAC,KAAK,CAAG,EAEb,IAAI,CAAC,KAAK,EACZ,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAC,CAA7B,EACE,OAAO,EAAI,IAAI,CAAC,SAAC,CAAjB,EAA0B,OAAA,AAAS,OAAT,C,EAC5B,EACF,C,E,CAEA,IAAA,YAAA,MAAA,WACE,IAAM,EAAW,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAC,CAAvC,EACE,OAAO,EAAI,IAAI,CAAC,SAAC,CAAjB,EAA0B,OAAA,AAAS,IAAT,C,EAC5B,GAEM,EAAqB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAC,CAAjD,EACE,OAAO,EAAI,IAAI,CAAC,SAAC,CAAA,CAAM,CAAvB,EACE,OAAO,IAAS,CAAG,CAAC,EAAc,EAAE,AACtC,EACF,GAEM,EAAwB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAChD,SAAC,CAAA,CAAK,CAAA,CAAU,CADlB,EAEI,OAAO,EAAI,IAAI,CAAC,SAAC,CAAA,CAAM,CAAvB,SACE,AAAI,EAAW,EAAI,GACV,IAAS,CAAK,CAAC,EAAW,EAAE,CAAC,EAAY,AAIpD,EACF,GAGF,MAAO,CAAC,GAAY,CAAC,GAAsB,CAAC,CAC9C,C,E,CAEA,IAAA,cAAA,MAAA,WACE,IItS6B,EJsSvB,EAAa,EAAE,CAErB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAC,CAAA,CAAK,CAA9B,EACE,EAAI,OAAO,CAAC,SAAC,CAAA,CAAM,CAAnB,EACe,IAAT,GACF,EAAW,IAAI,CAAC,CAAC,EAAU,EAAY,CAE3C,EACF,GAEA,IACE,EIhTK,ACNJ,SAA2B,CAAG,EACjC,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,CACnC,EDGiC,EJiT3B,CAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAAE,GIhT1B,AEN9B,SAAkC,CAAG,CAAE,CAAC,EAC3C,IAOI,EAAI,EAPJ,EAAK,AAAO,MAAP,EAAc,KAAO,AAAkB,aAAlB,OAAO,QAA0B,CAAG,CAAC,OAAO,QAAQ,CAAC,EAAI,CAAG,CAAC,aAAa,CAExG,GAAI,AAAM,MAAN,GAEJ,IAAI,EAAO,EAAE,CACT,EAAK,CAAA,EACL,EAAK,CAAA,EAGT,GAAI,CACA,IAAK,EAAK,EAAG,IAAI,CAAC,GAAM,CAAE,CAAA,EAAM,AAAA,CAAA,EAAK,EAAG,IAAI,EAAA,EAAI,IAAI,AAAJ,IAC5C,EAAK,IAAI,CAAC,EAAG,KAAK,EACT,ANyS0C,IMzS1C,EAAK,MAAM,EAF+B,EAAK,CAAA,GAIhE,CAAE,MAAO,EAAK,CACV,EAAK,CAAA,EACL,EAAK,CACT,QAAU,CACN,GAAI,CACK,GAAM,AAAgB,MAAhB,EAAG,MAAS,EAAU,EAAG,MAAS,EACjD,QAAU,CACN,GAAI,EAAI,MAAM,CAClB,CACJ,CAEA,OAAO,EACX,EFrB8D,EJgTC,IIhTU,AAAA,EAA+B,EJgTzC,IIhToD,AGN5G,WACH,MAAM,AAAI,UAAU,4IACxB,IPmTW,EACL,CAAA,CAAA,EAAA,CADqB,EACrB,CADF,CAAA,EAAA,CAGI,KAAK,KAAK,CAAC,AAAgB,GAAhB,KAAK,MAAM,IACxB,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAe,CAAC,EAAkB,CAAG,EAErD,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAe,CAAC,EAAkB,CAAG,CAEzD,C,E,CAEA,IAAA,iBAAA,MAAA,SAAe,CAAK,EAClB,OAAO,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAC,CAAA,CAAK,CAAnC,EACE,OAAO,EAAI,KAAK,CACd,SAAC,CAAA,CAAM,CADT,EACuB,OAAA,IAAS,CAAK,CAAC,EAAS,CAAC,EAAU,A,EAE5D,EACF,C,E,CAEA,IAAA,cAAA,MAAA,W,I,E,I,CACE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAC,CAAA,CAAK,CAA7B,EACE,EAAI,OAAO,CAAC,SAAC,CAAA,CAAM,CAAnB,EACE,EAAK,SAAS,CAAG,aACjB,EAAK,WAAW,CAAG,EAAK,QAAQ,EAAE,CAAC,EAAS,CAAC,EAAU,CACvD,EAAK,SAAS,CAAC,GAAG,CAAC,eAAgC,MAAA,CAAjB,EAAK,WAAW,EACpD,EACF,GAEA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAC,CAAxB,EACE,EAAI,OAAO,CAAC,SAAC,CAAb,EAC2B,MAArB,EAAK,WAAW,EAClB,CAAA,EAAK,WAAW,CAAG,EADrB,CAGF,EACF,EACF,C,E,CE3UkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFLjB,EEK6B,SAAS,CAAE,GFLxC,C,IAmBnB,AAAA,EAnBmB,EAmBZ,cAAc,QACrB,AAAA,EApBmB,EAoBZ,iBAAiB,WACxB,AAAA,EArBmB,EAqBZ,aAAa,OACpB,AAAA,EAtBmB,EAsBZ,cAAc,QAErB,AAAA,EAxBmB,EAwBZ,sBAAsB,CAC3B,CAAC,CAAA,EAAO,CAAA,EAAO,CAAA,EAAO,CAAA,EAAM,CAC5B,CAAC,CAAA,EAAO,CAAA,EAAO,CAAA,EAAO,CAAA,EAAM,CAC5B,CAAC,CAAA,EAAO,CAAA,EAAO,CAAA,EAAO,CAAA,EAAM,CAC5B,CAAC,CAAA,EAAO,CAAA,EAAO,CAAA,EAAO,CAAA,EAAM,CAC7B,ED/BH,IAAM,EAAO,IAAI,EAFH,SAAS,aAAa,CAAC,UAI/B,EAAc,SAAS,aAAa,CAAC,UACrC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,iBACtC,EAAa,SAAS,aAAa,CAAC,gBAE1C,EAAY,gBAAgB,CAAC,QAAS,WAChC,EAAY,SAAS,CAAC,QAAQ,CAAC,UACjC,EAAK,KAAK,GACV,EAAY,WAAW,CAAG,UAC1B,EAAY,SAAS,CAAC,MAAM,CAAC,SAC7B,EAAY,SAAS,CAAC,GAAG,CAAC,WAC1B,EAAa,SAAS,CAAC,GAAG,CAAC,YAE3B,EAAK,OAAO,GACZ,EAAU,WAAW,CAAG,EAAK,QAAQ,GACrC,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,EAAW,SAAS,CAAC,GAAG,CAAC,UAE7B,GAEA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EACE,GAAI,EAAK,SAAS,KAAO,AAAA,EAAK,cAAc,CAC1C,OAAQ,EAAE,GAAG,EACX,IAAK,YACH,EAAK,QAAQ,GACb,KAEF,KAAK,aACH,EAAK,SAAS,GACd,KAEF,KAAK,UACH,EAAK,MAAM,GACX,KAEF,KAAK,YACH,EAAK,QAAQ,EAEjB,CAKF,OAFA,EAAU,WAAW,CAAG,EAAK,QAAQ,GAE7B,EAAK,SAAS,IACpB,KAAK,AAAA,EAAK,UAAU,CAClB,EAAW,SAAS,CAAC,MAAM,CAAC,UAC5B,KAEF,MAAK,AAAA,EAAK,WAAW,CACnB,EAAa,SAAS,CAAC,MAAM,CAAC,SAElC,CACF,E","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    function Game(table) {\n        var initialState = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(this, \"score\", 0);\n        (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)(this, \"status\", Game.STATUS_IDLE);\n        this.table = table;\n        this.state = initialState;\n        this.tableBody = this.table.tBodies[0];\n        this.tableRows = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.tableBody.rows);\n        this.tableRows = this.tableRows.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row.cells);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveTilesToTheLeft\",\n            value: function moveTilesToTheLeft(row, rowIndex, mergeFlags, fromIndex, toIndex) {\n                if (toIndex < 0 || row[fromIndex] === 0) return;\n                if (row[toIndex] === row[fromIndex] && !mergeFlags[rowIndex][toIndex] && !mergeFlags[rowIndex][fromIndex]) {\n                    row[toIndex] *= 2;\n                    this.score += row[toIndex];\n                    row[fromIndex] = 0;\n                    mergeFlags[rowIndex][toIndex] = true;\n                } else if (row[toIndex] === 0) {\n                    row[toIndex] = row[fromIndex];\n                    row[fromIndex] = 0;\n                    if (mergeFlags[rowIndex][fromIndex]) mergeFlags[rowIndex][toIndex] = true;\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                var clone = structuredClone(this.getState());\n                var mergeFlags = structuredClone(Game.INITIAL_MERGE_FLAGS);\n                this.getState().forEach(function(row, rowIndex) {\n                    for(var columnIndex = 3; columnIndex > 0; columnIndex--){\n                        _this.moveTilesToTheLeft(row, rowIndex, mergeFlags, columnIndex - 2, columnIndex - 3);\n                        _this.moveTilesToTheLeft(row, rowIndex, mergeFlags, columnIndex - 1, columnIndex - 2);\n                        _this.moveTilesToTheLeft(row, rowIndex, mergeFlags, columnIndex, columnIndex - 1);\n                    }\n                });\n                if (!this.areStatesEqual(clone)) {\n                    this.spawnNumber();\n                    this.updateTable();\n                }\n                if (this.checkWin()) this.status = Game.STATUS_WIN;\n                if (this.checkLose()) this.status = Game.STATUS_LOSE;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.getState().map(function(row) {\n                    return row.reverse();\n                });\n                this.moveLeft();\n                this.getState().map(function(row) {\n                    return row.reverse();\n                });\n                this.updateTable();\n            }\n        },\n        {\n            key: \"moveTilesUp\",\n            value: function moveTilesUp(state, columnIndex, mergeFlags, fromIndex, toIndex) {\n                if (toIndex < 0 || state[fromIndex][columnIndex] === 0) return;\n                if (state[toIndex][columnIndex] === state[fromIndex][columnIndex] && !mergeFlags[fromIndex][columnIndex] && !mergeFlags[toIndex][columnIndex]) {\n                    state[toIndex][columnIndex] *= 2;\n                    this.score += state[toIndex][columnIndex];\n                    state[fromIndex][columnIndex] = 0;\n                    mergeFlags[toIndex][columnIndex] = true;\n                } else if (state[toIndex][columnIndex] === 0) {\n                    state[toIndex][columnIndex] = state[fromIndex][columnIndex];\n                    state[fromIndex][columnIndex] = 0;\n                    if (mergeFlags[fromIndex][columnIndex]) mergeFlags[toIndex][columnIndex] = true;\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                var clone = structuredClone(this.getState());\n                var mergeFlags = structuredClone(Game.INITIAL_MERGE_FLAGS);\n                this.getState().forEach(function(_, columnIndex, state) {\n                    for(var rowIndex = 3; rowIndex > 0; rowIndex--){\n                        _this.moveTilesUp(state, columnIndex, mergeFlags, rowIndex - 2, rowIndex - 3);\n                        _this.moveTilesUp(state, columnIndex, mergeFlags, rowIndex - 1, rowIndex - 2);\n                        _this.moveTilesUp(state, columnIndex, mergeFlags, rowIndex, rowIndex - 1);\n                    }\n                });\n                if (!this.areStatesEqual(clone)) {\n                    this.spawnNumber();\n                    this.updateTable();\n                }\n                if (this.checkWin()) this.status = Game.STATUS_WIN;\n                if (this.checkLose()) this.status = Game.STATUS_LOSE;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.getState().reverse();\n                this.moveUp();\n                this.getState().reverse();\n                this.updateTable();\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` + the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS_PLAYING;\n                this.spawnNumber();\n                this.spawnNumber();\n                this.updateTable();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.start();\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                return this.getState().some(function(row) {\n                    return row.some(function(cell) {\n                        return cell === 2048;\n                    });\n                });\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                var areZeros = this.getState().some(function(row) {\n                    return row.some(function(cell) {\n                        return cell === 0;\n                    });\n                });\n                var areSameNumbersRows = this.getState().some(function(row) {\n                    return row.some(function(cell, columnIndex) {\n                        return cell === row[columnIndex + 1];\n                    });\n                });\n                var areSameNumbersColumns = this.getState().some(function(row, rowIndex, state) {\n                    return row.some(function(cell, columnIndex) {\n                        if (rowIndex + 1 < 4) return cell === state[rowIndex + 1][columnIndex];\n                        else return false;\n                    });\n                });\n                return !areZeros && !areSameNumbersRows && !areSameNumbersColumns;\n            }\n        },\n        {\n            key: \"spawnNumber\",\n            value: function spawnNumber() {\n                var emptyCells = [];\n                this.getState().forEach(function(row, rowIndex) {\n                    row.forEach(function(cell, columnIndex) {\n                        if (cell === 0) emptyCells.push([\n                            rowIndex,\n                            columnIndex\n                        ]);\n                    });\n                });\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), randomRowIndex = _emptyCells_Math_floor[0], randomColumnIndex = _emptyCells_Math_floor[1];\n                if (Math.floor(Math.random() * 10)) this.getState()[randomRowIndex][randomColumnIndex] = 2;\n                else this.getState()[randomRowIndex][randomColumnIndex] = 4;\n            }\n        },\n        {\n            key: \"areStatesEqual\",\n            value: function areStatesEqual(clone) {\n                return this.getState().every(function(row, rowIndex) {\n                    return row.every(function(cell, cellIndex) {\n                        return cell === clone[rowIndex][cellIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"updateTable\",\n            value: function updateTable() {\n                var _this = this;\n                this.tableRows.forEach(function(row, rowIndex) {\n                    row.forEach(function(cell, cellIndex) {\n                        cell.className = \"field-cell\";\n                        cell.textContent = _this.getState()[rowIndex][cellIndex];\n                        cell.classList.add(\"field-cell--\".concat(cell.textContent));\n                    });\n                });\n                this.tableRows.forEach(function(row) {\n                    row.forEach(function(cell) {\n                        if (cell.textContent === \"0\") cell.textContent = \"\";\n                    });\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$export$2e2bcd8739ae039, \"STATUS_IDLE\", \"idle\");\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$export$2e2bcd8739ae039, \"STATUS_PLAYING\", \"playing\");\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$export$2e2bcd8739ae039, \"STATUS_WIN\", \"win\");\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$export$2e2bcd8739ae039, \"STATUS_LOSE\", \"lose\");\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$export$2e2bcd8739ae039, \"INITIAL_MERGE_FLAGS\", [\n    [\n        false,\n        false,\n        false,\n        false\n    ],\n    [\n        false,\n        false,\n        false,\n        false\n    ],\n    [\n        false,\n        false,\n        false,\n        false\n    ],\n    [\n        false,\n        false,\n        false,\n        false\n    ]\n]);\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$table = document.querySelector(\"table\");\nvar $197cd56b15c33885$var$game = new (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039)($197cd56b15c33885$var$table);\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$loseMeassage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startButton.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$loseMeassage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039).STATUS_PLAYING) switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039).STATUS_WIN:\n            $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n            break;\n        case (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039).STATUS_LOSE:\n            $197cd56b15c33885$var$loseMeassage.classList.remove(\"hidden\");\n            break;\n    }\n});\n\n})();\n//# sourceMappingURL=index.daff0360.js.map\n","'use strict';\nimport Game from '../modules/Game.class';\n\nconst table = document.querySelector('table');\n\nconst game = new Game(table);\n\nconst startButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst loseMeassage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    game.start();\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startMessage.classList.add('hidden');\n  } else {\n    game.restart();\n    gameScore.textContent = game.getScore();\n    loseMeassage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === Game.STATUS_PLAYING) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n  }\n\n  gameScore.textContent = game.getScore();\n\n  switch (game.getStatus()) {\n    case Game.STATUS_WIN:\n      winMessage.classList.remove('hidden');\n      break;\n\n    case Game.STATUS_LOSE:\n      loseMeassage.classList.remove('hidden');\n      break;\n  }\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nexport default class Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  score = 0;\n\n  status = Game.STATUS_IDLE;\n\n  static STATUS_IDLE = 'idle';\n  static STATUS_PLAYING = 'playing';\n  static STATUS_WIN = 'win';\n  static STATUS_LOSE = 'lose';\n\n  static INITIAL_MERGE_FLAGS = [\n    [false, false, false, false],\n    [false, false, false, false],\n    [false, false, false, false],\n    [false, false, false, false],\n  ];\n\n  constructor(\n    table,\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.table = table;\n    this.state = initialState;\n    this.tableBody = this.table.tBodies[0];\n    this.tableRows = [...this.tableBody.rows];\n    this.tableRows = this.tableRows.map((row) => [...row.cells]);\n  }\n\n  moveTilesToTheLeft(row, rowIndex, mergeFlags, fromIndex, toIndex) {\n    if (toIndex < 0 || row[fromIndex] === 0) {\n      return;\n    }\n\n    if (\n      row[toIndex] === row[fromIndex] &&\n      !mergeFlags[rowIndex][toIndex] &&\n      !mergeFlags[rowIndex][fromIndex]\n    ) {\n      row[toIndex] *= 2;\n      this.score += row[toIndex];\n      row[fromIndex] = 0;\n      mergeFlags[rowIndex][toIndex] = true;\n    } else if (row[toIndex] === 0) {\n      row[toIndex] = row[fromIndex];\n      row[fromIndex] = 0;\n\n      if (mergeFlags[rowIndex][fromIndex]) {\n        mergeFlags[rowIndex][toIndex] = true;\n      }\n    }\n  }\n\n  moveLeft() {\n    const clone = structuredClone(this.getState());\n\n    const mergeFlags = structuredClone(Game.INITIAL_MERGE_FLAGS);\n\n    this.getState().forEach((row, rowIndex) => {\n      for (let columnIndex = 3; columnIndex > 0; columnIndex--) {\n        this.moveTilesToTheLeft(\n          row,\n          rowIndex,\n          mergeFlags,\n          columnIndex - 2,\n          columnIndex - 3,\n        );\n\n        this.moveTilesToTheLeft(\n          row,\n          rowIndex,\n          mergeFlags,\n          columnIndex - 1,\n          columnIndex - 2,\n        );\n\n        this.moveTilesToTheLeft(\n          row,\n          rowIndex,\n          mergeFlags,\n          columnIndex,\n          columnIndex - 1,\n        );\n      }\n    });\n\n    if (!this.areStatesEqual(clone)) {\n      this.spawnNumber();\n      this.updateTable();\n    }\n\n    if (this.checkWin()) {\n      this.status = Game.STATUS_WIN;\n    }\n\n    if (this.checkLose()) {\n      this.status = Game.STATUS_LOSE;\n    }\n  }\n\n  moveRight() {\n    this.getState().map((row) => row.reverse());\n    this.moveLeft();\n    this.getState().map((row) => row.reverse());\n    this.updateTable();\n  }\n\n  moveTilesUp(state, columnIndex, mergeFlags, fromIndex, toIndex) {\n    if (toIndex < 0 || state[fromIndex][columnIndex] === 0) {\n      return;\n    }\n\n    if (\n      state[toIndex][columnIndex] === state[fromIndex][columnIndex] &&\n      !mergeFlags[fromIndex][columnIndex] &&\n      !mergeFlags[toIndex][columnIndex]\n    ) {\n      state[toIndex][columnIndex] *= 2;\n      this.score += state[toIndex][columnIndex];\n      state[fromIndex][columnIndex] = 0;\n      mergeFlags[toIndex][columnIndex] = true;\n    } else if (state[toIndex][columnIndex] === 0) {\n      state[toIndex][columnIndex] = state[fromIndex][columnIndex];\n      state[fromIndex][columnIndex] = 0;\n\n      if (mergeFlags[fromIndex][columnIndex]) {\n        mergeFlags[toIndex][columnIndex] = true;\n      }\n    }\n  }\n\n  moveUp() {\n    const clone = structuredClone(this.getState());\n\n    const mergeFlags = structuredClone(Game.INITIAL_MERGE_FLAGS);\n\n    this.getState().forEach((_, columnIndex, state) => {\n      for (let rowIndex = 3; rowIndex > 0; rowIndex--) {\n        this.moveTilesUp(\n          state,\n          columnIndex,\n          mergeFlags,\n          rowIndex - 2,\n          rowIndex - 3,\n        );\n\n        this.moveTilesUp(\n          state,\n          columnIndex,\n          mergeFlags,\n          rowIndex - 1,\n          rowIndex - 2,\n        );\n\n        this.moveTilesUp(\n          state,\n          columnIndex,\n          mergeFlags,\n          rowIndex,\n          rowIndex - 1,\n        );\n      }\n    });\n\n    if (!this.areStatesEqual(clone)) {\n      this.spawnNumber();\n      this.updateTable();\n    }\n\n    if (this.checkWin()) {\n      this.status = Game.STATUS_WIN;\n    }\n\n    if (this.checkLose()) {\n      this.status = Game.STATUS_LOSE;\n    }\n  }\n\n  moveDown() {\n    this.getState().reverse();\n    this.moveUp();\n    this.getState().reverse();\n    this.updateTable();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` + the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = Game.STATUS_PLAYING;\n\n    this.spawnNumber();\n    this.spawnNumber();\n\n    this.updateTable();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n\n    this.start();\n  }\n\n  checkWin() {\n    return this.getState().some((row) => {\n      return row.some((cell) => cell === 2048);\n    });\n  }\n\n  checkLose() {\n    const areZeros = this.getState().some((row) => {\n      return row.some((cell) => cell === 0);\n    });\n\n    const areSameNumbersRows = this.getState().some((row) => {\n      return row.some((cell, columnIndex) => {\n        return cell === row[columnIndex + 1];\n      });\n    });\n\n    const areSameNumbersColumns = this.getState().some(\n      (row, rowIndex, state) => {\n        return row.some((cell, columnIndex) => {\n          if (rowIndex + 1 < 4) {\n            return cell === state[rowIndex + 1][columnIndex];\n          } else {\n            return false;\n          }\n        });\n      },\n    );\n\n    return !areZeros && !areSameNumbersRows && !areSameNumbersColumns;\n  }\n\n  spawnNumber() {\n    const emptyCells = [];\n\n    this.getState().forEach((row, rowIndex) => {\n      row.forEach((cell, columnIndex) => {\n        if (cell === 0) {\n          emptyCells.push([rowIndex, columnIndex]);\n        }\n      });\n    });\n\n    const [randomRowIndex, randomColumnIndex] =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    if (Math.floor(Math.random() * 10)) {\n      this.getState()[randomRowIndex][randomColumnIndex] = 2;\n    } else {\n      this.getState()[randomRowIndex][randomColumnIndex] = 4;\n    }\n  }\n\n  areStatesEqual(clone) {\n    return this.getState().every((row, rowIndex) => {\n      return row.every(\n        (cell, cellIndex) => cell === clone[rowIndex][cellIndex],\n      );\n    });\n  }\n\n  updateTable() {\n    this.tableRows.forEach((row, rowIndex) => {\n      row.forEach((cell, cellIndex) => {\n        cell.className = 'field-cell';\n        cell.textContent = this.getState()[rowIndex][cellIndex];\n        cell.classList.add(`field-cell--${cell.textContent}`);\n      });\n    });\n\n    this.tableRows.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell.textContent === '0') {\n          cell.textContent = '';\n        }\n      });\n    });\n  }\n}\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$cd5a47cf8ef6d766$export$1e71eb4bef00f6b0","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$3d28d7f1aac198f5$export$2e2bcd8739ae039","protoProps","Game","table","initialState","arguments","instance","Constructor","STATUS_IDLE","state","tableBody","tBodies","tableRows","rows","map","row","cells","rowIndex","mergeFlags","fromIndex","toIndex","score","_this","clone","structuredClone","getState","INITIAL_MERGE_FLAGS","forEach","columnIndex","moveTilesToTheLeft","areStatesEqual","spawnNumber","updateTable","checkWin","status","STATUS_WIN","checkLose","STATUS_LOSE","reverse","moveLeft","_","moveTilesUp","moveUp","STATUS_PLAYING","start","some","cell","areZeros","areSameNumbersRows","areSameNumbersColumns","emptyCells","push","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","randomRowIndex","randomColumnIndex","every","cellIndex","className","textContent","classList","add","concat","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$game","document","querySelector","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$loseMeassage","$197cd56b15c33885$var$winMessage","addEventListener","contains","remove","restart","getScore","e","getStatus","moveRight","moveDown"],"version":3,"file":"index.daff0360.js.map"}